#####################################
#	Protocole d'application			#
#	Nicolas Forget - Ying Jiang		#
#####################################

Serialisation : Objet
	Le serveur n'envoie et ne reçoit que des objets Message sérializé

##############
# OBJETS
##############

Message
	commande:Enum[ADD, ADDS, GET, OK, EXCEPTION]
	argument:List<String>
	
Personne
	nickname:List<String>
	name:String
	
Exceptions : NicknameAlreadyExist, NicknameNotFound, WrongSyntax, ServeurEmpty
	Exception.toString affiche le comptenu de l'exception dans une string

##############
# SERVICES		(implémenté pour l'instant)
##############

Ajouter une personne
	C->S	newMessage(ADD, name, nickname)
	C<-S	newMessage(OK)
		ou	newMessage(EXCEPTION, NicknameAlreadyExist.toString)

Ajouter un surnom
	C->S	newMessage(ADDS, nickname, newNickname)
	C<-S	newMessage(OK)
		ou	newMessage(EXCEPTION, NicknameNotFound.toString)

Lister toutes les personnes
	C->S	newMessage(GET, /*vide*/)
	C<-S	newMessage(OK)
		ou	newMessage(EXCEPTION, ServeurEmpty.toString)
	
Lister les surnom d'une personne
	C->S	newMessage(GET, nickname)
	C<-S	newMessage(OK)
		ou	newMessage(EXCEPTION, NicknameNotFound.toString)

		
/!\ ATTENTION a la syntaxe /!\
	C->S	newMessage(ADD, /* vide */)
		ou	newMessage(GET, name, nickname)
		ou	newMessage(OK, ...)
			...
		ou	toute autre commande mal formé
			...
	C<-S	newMessage(EXCEPTION, WrongSyntax.toString)